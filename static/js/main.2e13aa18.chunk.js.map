{"version":3,"sources":["App.js","fonts/digital-7.ttf","serviceWorker.js","index.js"],"names":["OPERATORS","CalcHistory","props","className","id","calcHistory","CurrentInput","currentAction","Calculator","state","currentResult","showingResult","lastAction","handleNumberClick","bind","handleOperation","handleClear","handleZero","handleDecimal","handleEquals","event","this","length","NaN","value","target","setState","Object","assign","slice","concat","includes","lastInput","secondLastInput","thirdLastInput","regexOP","toString","test","index","copyCalcHistory","regex","preparedCalcHistory","result","eval","resultStr","onClick","placeholder","React","Component","module","exports","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2e13aa18.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport \"./fonts/digital-7.ttf\"\r\n\r\n\r\nconst OPERATORS = [\" / \", \" * \", \" + \", \" - \"]\r\n\r\nconst CalcHistory = (props) => {\r\n    return (\r\n            <div className={\"calcHistory\"} id={\"calcHistory\"}>\r\n                {props.calcHistory}\r\n            </div>\r\n    )\r\n}\r\n\r\nconst CurrentInput = (props) =>{\r\n    return(\r\n            <div className={\"currentInput\"} id={\"display\"}>\r\n                <div className={\"display\"}>{props.currentAction}</div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nclass Calculator extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentResult: 0,\r\n      currentAction: \"0\",\r\n      calcHistory: \"\",\r\n      showingResult: false,\r\n      lastAction : \"0\"\r\n\r\n    }\r\n    this.handleNumberClick = this.handleNumberClick.bind(this);\r\n    this.handleOperation = this.handleOperation.bind(this);\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.handleZero = this.handleZero.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleEquals = this.handleEquals.bind(this);\r\n  }\r\n\r\n  handleNumberClick(event){\r\n\r\n      if((this.state.currentAction).length >= 15){\r\n          return NaN;\r\n      }\r\n\r\n      let value = event.target.value;\r\n      if(this.state.showingResult){\r\n          this.setState(\r\n              Object.assign({}, {currentResult: 0, currentAction: event.target.value,\r\n                  calcHistory: event.target.value, showingResult: false, lastAction : value})\r\n          );\r\n      }\r\n      else{\r\n          if(this.state.lastAction === \"0\" && (this.state.currentAction).length === 1){\r\n              if((this.state.calcHistory).length > 0){\r\n                  this.setState(state => {\r\n                      return {\r\n                          currentResult: 0,\r\n                          currentAction: value,\r\n                          calcHistory: ((state.calcHistory).slice(0, (state.calcHistory).length -1)).concat(value),\r\n                          showingResult: false,\r\n                          lastAction: value\r\n                      }\r\n                  })\r\n              }\r\n              else{\r\n                  this.setState(\r\n                      Object.assign({}, {currentAction: value, currentResult: 0,\r\n                          calcHistory: event.target.value, showingResult: false, lastAction : value}));\r\n              }\r\n          }\r\n          else if(OPERATORS.includes(this.state.lastAction)){\r\n              this.setState(state =>{\r\n                  return {\r\n                      currentResult: 0,\r\n                      currentAction : value,\r\n                      calcHistory: state.calcHistory.concat(value),\r\n                      showingResult: false,\r\n                      lastAction : value\r\n                  }\r\n              });\r\n          }\r\n          else{\r\n              this.setState(state => {\r\n                  return {\r\n                      currentAction: state.currentAction.concat(value),\r\n                      calcHistory: state.calcHistory.concat(value),\r\n                      currentResult: 0,\r\n                      showingResult: false,\r\n                      lastAction : value\r\n                  }\r\n              });\r\n          }\r\n      }\r\n  }\r\n\r\n  handleOperation(event){\r\n      let value = event.target.value;\r\n      let lastInput = this.state.lastAction\r\n      let secondLastInput = this.state.calcHistory[(this.state.calcHistory).length -2];\r\n      let thirdLastInput = this.state.calcHistory[(this.state.calcHistory).length -5];\r\n      let regex = /[0-9]|\\./;\r\n      let regexOP = /\\+|\\-|\\*|\\//;\r\n\r\n      if(this.state.showingResult){\r\n          this.setState(state =>{\r\n              return {\r\n                  currentAction: value,\r\n                  calcHistory: (state.currentResult).toString(10).concat(value),\r\n                  currentResult: 0,\r\n                  showingResult: false,\r\n                  lastAction : value\r\n              }\r\n          });\r\n      }\r\n\r\n      else if(regex.test(lastInput)){\r\n          this.setState(state => {\r\n             return{\r\n                 currentAction:value,\r\n                 calcHistory: (state.calcHistory).concat(value),\r\n                 currentResult: 0,\r\n                 showingResult: false,\r\n                 lastAction : value\r\n             }\r\n          });\r\n      }\r\n\r\n      else if((value === \" + \" || value === \" / \" || value === \" * \") && regexOP.test(secondLastInput)){\r\n          if(regexOP.test(thirdLastInput)){\r\n              this.setState(state => {\r\n                  return {\r\n                      currentAction: value,\r\n                      calcHistory: (state.calcHistory.slice(0, (this.state.calcHistory).length - 6)).concat(value),\r\n                      currentResult: 0,\r\n                      showingResult: false,\r\n                      lastAction: value\r\n                  };\r\n              });\r\n          }\r\n          else{\r\n              this.setState(state => {\r\n                  return {\r\n                      currentAction: value,\r\n                      calcHistory: (state.calcHistory.slice(0, (this.state.calcHistory).length - 3)).concat(value),\r\n                      currentResult: 0,\r\n                      showingResult: false,\r\n                      lastAction: value\r\n                  };\r\n              });\r\n          }\r\n      }\r\n      else{\r\n          if((value === \" - \") && (regexOP.test(secondLastInput))){\r\n              if(regexOP.test(thirdLastInput)){\r\n                  this.setState(state => {\r\n                      return {\r\n                          currentAction: value,\r\n                          calcHistory: (state.calcHistory.slice(0, (this.state.calcHistory).length - 6)).concat(value),\r\n                          currentResult: 0,\r\n                          showingResult: false,\r\n                          lastAction: value\r\n                      };\r\n                  });\r\n              }\r\n              else{\r\n                  this.setState(state => {\r\n                      return{\r\n                          currentAction:value,\r\n                          calcHistory: (state.calcHistory).concat(value),\r\n                          currentResult: 0,\r\n                          showingResult: false,\r\n                          lastAction : value\r\n                      }\r\n                  });\r\n              }\r\n          }\r\n      }\r\n  }\r\n\r\n\r\n  handleClear(){\r\n\r\n      this.setState({\r\n          currentAction: \"0\",\r\n          calcHistory: \"\",\r\n          currentResult: 0,\r\n          showingResult: false,\r\n          lastAction: \"0\"\r\n      });\r\n  }\r\n\r\n  handleZero(){\r\n\r\n      if((this.state.currentAction).length >= 15){\r\n          return NaN;\r\n      }\r\n\r\n      if(this.state.showingResult){\r\n          this.setState({\r\n              currentAction: \"0\",\r\n              calcHistory: \"\",\r\n              currentResult: 0,\r\n              showingResult: false,\r\n              lastAction: \"0\"\r\n          });\r\n      }\r\n\r\n      else{\r\n          if(this.state.lastAction === \"0\" && (this.state.currentAction).length === 1) {\r\n              return NaN;\r\n          }\r\n          else if(OPERATORS.includes(this.state.lastAction)){\r\n              this.setState(state =>{\r\n                  return {\r\n                      currentResult: 0,\r\n                      currentAction : \"0\",\r\n                      calcHistory: state.calcHistory.concat(\"0\"),\r\n                      showingResult: false,\r\n                      lastAction : \"0\"\r\n                  }\r\n              });\r\n          }\r\n          else{\r\n              this.setState(state => {\r\n                  return {\r\n                      currentAction: state.currentAction.concat(\"0\"),\r\n                      calcHistory: state.calcHistory.concat(\"0\"),\r\n                      currentResult: 0,\r\n                      showingResult: false,\r\n                      lastAction : \"0\"\r\n                  }\r\n              });\r\n          }\r\n      }\r\n  }\r\n\r\n  handleDecimal(){\r\n      if((this.state.currentAction).length >= 15){\r\n          return NaN;\r\n      }\r\n\r\n      if(this.state.showingResult){\r\n          this.setState({\r\n              currentAction: \"0.\",\r\n              calcHistory: \"0.\",\r\n              currentResult: 0,\r\n              showingResult: false,\r\n              lastAction: \".\"\r\n          });\r\n      }\r\n      else{\r\n          if((this.state.currentAction).includes(\".\")){\r\n              return NaN;\r\n          }\r\n          else{\r\n              if(OPERATORS.includes(this.state.lastAction)){\r\n                  this.setState(state => {\r\n                      return {\r\n                          currentAction: \"0.\",\r\n                          calcHistory: (state.calcHistory).concat(\"0.\"),\r\n                          currentResult: 0,\r\n                          showingResult: false,\r\n                          lastAction: \".\"\r\n                      }\r\n                  });\r\n              }\r\n              else{\r\n                  if(this.state.currentAction === \"0\"){\r\n                      this.setState(state => {\r\n                          return {\r\n                              currentAction: (state.currentAction).concat(\".\"),\r\n                              calcHistory: (state.calcHistory).concat(\"0.\"),\r\n                              currentResult: 0,\r\n                              showingResult: false,\r\n                              lastAction: \".\"\r\n                          }\r\n                      });\r\n                  }\r\n                  else{\r\n                      this.setState(state => {\r\n                          return {\r\n                              currentAction: (state.currentAction).concat(\".\"),\r\n                              calcHistory: (state.calcHistory).concat(\".\"),\r\n                              currentResult: 0,\r\n                              showingResult: false,\r\n                              lastAction: \".\"\r\n                          }\r\n                      });\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  }\r\n\r\n  handleEquals(){\r\n      let index = (this.state.calcHistory).length - 1;\r\n      let copyCalcHistory = this.state.calcHistory.slice(0,)\r\n\r\n      if(this.state.lastAction === \" = \"){\r\n          return NaN;\r\n      }\r\n\r\n      let regex = /[0-9]|\\./\r\n\r\n      while(!regex.test(copyCalcHistory[index--])){}\r\n\r\n      let preparedCalcHistory = copyCalcHistory.slice(0, index + 2);\r\n      let result = eval(preparedCalcHistory);\r\n      let resultStr = result.toString();\r\n\r\n      this.setState(state => {\r\n          return {\r\n              currentAction: resultStr,\r\n              calcHistory: state.calcHistory.concat(\" = \" + resultStr),\r\n              currentResult: result,\r\n              showingResult: true,\r\n              lastAction: \" = \"\r\n          }\r\n      });\r\n\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n        <div className={\"container-fluid\"}>\r\n          <div className={\"my-auto calculator\"}>\r\n              <CalcHistory calcHistory={this.state.calcHistory}/>\r\n              <CurrentInput currentAction={this.state.currentAction}/>\r\n              <button id={\"clear\"} className={\"btn btn-primary btn-clear clear\"} onClick={this.handleClear} value={\"clear\"}\r\n                      placeholder={\" AC \"}> AC </button>\r\n              <button id={\"divide\"} className={\"btn btn-primary btn-normal divide btn-op\"} onClick={this.handleOperation}\r\n                      value={\" / \"} placeholder={\" / \"}> / </button>\r\n              <button id={\"multiply\"} className={\"btn btn-primary btn-normal multiply btn-op\"} onClick={this.handleOperation}\r\n                      value={\" * \"} placeholder={\" * \"}> * </button>\r\n              <button id={\"seven\"} className={\"btn btn-primary btn-normal r2 c1 btn-number\"} onClick={this.handleNumberClick} value={\"7\"}\r\n                      placeholder={\" 7 \"}> 7 </button>\r\n              <button id={\"eight\"} className={\"btn btn-primary btn-normal r2 c2 btn-number\"} onClick={this.handleNumberClick} value={\"8\"}\r\n                      placeholder={\" 8 \"}> 8 </button>\r\n              <button id={\"nine\"} className={\"btn btn-primary btn-normal r2 c3 btn-number\"} onClick={this.handleNumberClick} value={\"9\"}\r\n                      placeholder={\" 9 \"}> 9 </button>\r\n              <button id={\"subtract\"} className={\"btn btn-primary btn-normal r2 c4 btn-op\"} onClick={this.handleOperation}\r\n                      value={\" - \"} placeholder={\" - \"}> - </button>\r\n              <button id={\"four\"} className={\"btn btn-primary btn-normal r3 c1 btn-number\"} onClick={this.handleNumberClick} value={\"4\"}\r\n                      placeholder={\" 4 \"}> 4 </button>\r\n              <button id={\"five\"} className={\"btn btn-primary btn-normal r3 c2 btn-number\"} onClick={this.handleNumberClick} value={\"5\"}\r\n                      placeholder={\" 5 \"}> 5 </button>\r\n              <button id={\"six\"} className={\"btn btn-primary btn-normal r3 c3 btn-number\"} onClick={this.handleNumberClick} value={\"6\"}\r\n                      placeholder={\" 6 \"}> 6 </button>\r\n              <button id={\"add\"} className={\"btn btn-primary btn-normal r3 c4 btn-op\"} onClick={this.handleOperation} value={\" + \"}\r\n                      placeholder={\" + \"}> + </button>\r\n              <button id={\"one\"} className={\"btn btn-primary btn-normal r4 c1 btn-number\"} onClick={this.handleNumberClick} value={\"1\"}\r\n                      placeholder={\" 1 \"}> 1 </button>\r\n              <button id={\"two\"} className={\"btn btn-primary btn-normal r4 c2 btn-number\"} onClick={this.handleNumberClick} value={\"2\"}\r\n                      placeholder={\" 2 \"}> 2 </button>\r\n              <button id={\"three\"} className={\"btn btn-primary btn-normal r4 c3 btn-number\"} onClick={this.handleNumberClick} value={\"3\"}\r\n                      placeholder={\" 3 \"}> 3 </button>\r\n              <button id={\"zero\"} className={\"btn btn-primary btn-zero r5 c1\"} onClick={this.handleZero} value={\"0\"}\r\n                      placeholder={\" 0 \"}> 0 </button>\r\n              <button id={\"decimal\"} className={\"btn btn-primary btn-normal r5 c3 btn-number\"} onClick={this.handleDecimal}\r\n                      value={\".\"} placeholder={\".\"}>.</button>\r\n              <button id={\"equals\"} className={\"btn btn-primary btn-equals r4 c4\"} onClick={this.handleEquals}\r\n                      value={\" = \"} placeholder={\" = \"}>=</button>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Calculator;\r\n","module.exports = __webpack_public_path__ + \"static/media/digital-7.1e670d88.ttf\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Calculator from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Calculator />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}